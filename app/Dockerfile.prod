###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.2-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update \
    && apt-get install -y postgresql python-psycopg2 libpq-dev gcc python3-dev musl-dev

# install dependencies
COPY requirements requirements
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements/prod.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9.2-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y libpq-dev netcat postgresql-client-11
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements /requirements 
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

RUN ["chmod", "+x", "/home/app/web/entrypoint.prod.sh"]

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
