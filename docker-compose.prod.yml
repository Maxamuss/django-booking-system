version: '3.7'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
  db:
    image: postgres:11.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
    restart: always
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx
  redis:
    image: redis:alpine
    restart: always
  celery:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A config worker -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
  celery-beat:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: celery -A config beat -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
